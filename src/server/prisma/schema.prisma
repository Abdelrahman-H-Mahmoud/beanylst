// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum RecipeCategory {
  HOT_COFFEE    @map("HOT_COFFEE")
  COLD_COFFEE   @map("COLD_COFFEE")
  ESPRESSO      @map("ESPRESSO")
  SPECIALTY     @map("SPECIALTY")
  BEGINNER      @map("BEGINNER")
  ADVANCED      @map("ADVANCED")
  QUICK         @map("QUICK")
  TRADITIONAL   @map("TRADITIONAL")
}

model Blog {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  content     String
  author      String
  publishDate DateTime
  readTime    String
  imageUrl    String
  tags        String[]
}

model Recipe {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  ingredients String[]
  instructions String[]
  difficulty  String
  prepTime    String
  categories  RecipeCategory[]
  imageUrl    String?
}

model Review {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  storeId   String   @db.ObjectId
  store     Store    @relation(fields: [storeId], references: [id])
  rating    Int
  comment   String
  author    String
  createdAt DateTime @default(now())
}

model Store {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  address   String
  phone     String
  hours     Json     // Store hours as JSON object
  website   String?
  imageUrl  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  reviews   Review[]
}